// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: user_balance.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUserBalance = `-- name: CreateUserBalance :one
INSERT INTO user_balances (
    user_id,
    amount,
    created_at
) VALUES (
  $1, $2, now()
) RETURNING id, user_id, amount, created_at, updated_at
`

type CreateUserBalanceParams struct {
	UserID int64
	Amount pgtype.Numeric
}

func (q *Queries) CreateUserBalance(ctx context.Context, db DBTX, arg CreateUserBalanceParams) (UserBalance, error) {
	row := db.QueryRow(ctx, createUserBalance, arg.UserID, arg.Amount)
	var i UserBalance
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Amount,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateUserBalance = `-- name: UpdateUserBalance :exec
UPDATE user_balances 
SET amount = $1 
WHERE user_id = $2
`

type UpdateUserBalanceParams struct {
	Amount pgtype.Numeric
	UserID int64
}

func (q *Queries) UpdateUserBalance(ctx context.Context, db DBTX, arg UpdateUserBalanceParams) error {
	_, err := db.Exec(ctx, updateUserBalance, arg.Amount, arg.UserID)
	return err
}
