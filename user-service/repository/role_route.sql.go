// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: role_route.sql

package repository

import (
	"context"
)

const addRoleToUser = `-- name: AddRoleToUser :exec
INSERT INTO users_roles (
    user_id,
    role_id
) VALUES (
  $1, $2 
)
`

type AddRoleToUserParams struct {
	UserID int64
	RoleID int32
}

func (q *Queries) AddRoleToUser(ctx context.Context, db DBTX, arg AddRoleToUserParams) error {
	_, err := db.Exec(ctx, addRoleToUser, arg.UserID, arg.RoleID)
	return err
}

const getRoleByCode = `-- name: GetRoleByCode :one
SELECT id, code FROM roles 
WHERE code = $1
`

func (q *Queries) GetRoleByCode(ctx context.Context, db DBTX, code string) (Role, error) {
	row := db.QueryRow(ctx, getRoleByCode, code)
	var i Role
	err := row.Scan(&i.ID, &i.Code)
	return i, err
}

const getRouteByPath = `-- name: GetRouteByPath :one
SELECT id, path, description FROM routes
WHERE path = $1
`

func (q *Queries) GetRouteByPath(ctx context.Context, db DBTX, path string) (Route, error) {
	row := db.QueryRow(ctx, getRouteByPath, path)
	var i Route
	err := row.Scan(&i.ID, &i.Path, &i.Description)
	return i, err
}
